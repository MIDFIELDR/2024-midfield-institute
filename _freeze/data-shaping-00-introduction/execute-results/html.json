{
  "hash": "6bba0a301c5da4789d15f4af46c99c60",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Shaping MIDFIELD data three ways\"\n---\n\n\n![Image: *Workshop* by Daniel Mee is licensed under [CC BY 2.0](https://creativecommons.org/licenses/by/2.0/)](figures/data-shaping-0.png)\n\n\n\n\n\nUsing **base R**, **data.table**, and **dplyr/tidyr** to transform MIDFIELD data as needed for your analysis. \n\nIn this series of articles, we hope to address the needs of users who would prefer to use base R or dplyr syntax in lieu of the data.table syntax that appears everywhere else in midfieldr tutorials. We illustrate common data shaping tasks three ways: using base R, data.table, and dplyr systems. \n\nSources for translating among the three systems include [@Atrebas:2019; @Gimond:2019; @Hajnala:2018; @Mercer:2020; and @Vaughan:2023]. In particular, our outline is roughly based on Chapter 5 of [@Zumel+Mount:2020]. \n\n\n\n\n\n## Getting started\n\n[Project organization.]{.important} If you are writing your own scripts to follow along, our tutorials assume that you:\n\n- Are working within an [RStudio Project](before-you-arrive.html#start-the-setup)\n- Have set up a directory structure with folders for [data and scripts](before-you-arrive.html#add-some-folders).\n\n<br> \n\n[Packages.]{.important} The table lists the packages used in the data shaping articles overall. You may wish to [install](before-you-arrive.html#install-cran-packages) these packages before starting. \n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"gqmtcsodvg\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#gqmtcsodvg table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#gqmtcsodvg thead, #gqmtcsodvg tbody, #gqmtcsodvg tfoot, #gqmtcsodvg tr, #gqmtcsodvg td, #gqmtcsodvg th {\n  border-style: none;\n}\n\n#gqmtcsodvg p {\n  margin: 0;\n  padding: 0;\n}\n\n#gqmtcsodvg .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: small;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #000000;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#gqmtcsodvg .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#gqmtcsodvg .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#gqmtcsodvg .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#gqmtcsodvg .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gqmtcsodvg .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#gqmtcsodvg .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gqmtcsodvg .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#gqmtcsodvg .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#gqmtcsodvg .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#gqmtcsodvg .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#gqmtcsodvg .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#gqmtcsodvg .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#gqmtcsodvg .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#gqmtcsodvg .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: middle;\n}\n\n#gqmtcsodvg .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#gqmtcsodvg .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#gqmtcsodvg .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: none;\n  border-top-width: 1px;\n  border-top-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D5D5D5;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D5D5D5;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#gqmtcsodvg .gt_stub {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #5F5F5F;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gqmtcsodvg .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#gqmtcsodvg .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#gqmtcsodvg .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#gqmtcsodvg .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gqmtcsodvg .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #5F5F5F;\n}\n\n#gqmtcsodvg .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#gqmtcsodvg .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#gqmtcsodvg .gt_grand_summary_row {\n  color: #333333;\n  background-color: #D5D5D5;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gqmtcsodvg .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #5F5F5F;\n}\n\n#gqmtcsodvg .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #5F5F5F;\n}\n\n#gqmtcsodvg .gt_striped {\n  background-color: #F4F4F4;\n}\n\n#gqmtcsodvg .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#gqmtcsodvg .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gqmtcsodvg .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gqmtcsodvg .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gqmtcsodvg .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gqmtcsodvg .gt_left {\n  text-align: left;\n}\n\n#gqmtcsodvg .gt_center {\n  text-align: center;\n}\n\n#gqmtcsodvg .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#gqmtcsodvg .gt_font_normal {\n  font-weight: normal;\n}\n\n#gqmtcsodvg .gt_font_bold {\n  font-weight: bold;\n}\n\n#gqmtcsodvg .gt_font_italic {\n  font-style: italic;\n}\n\n#gqmtcsodvg .gt_super {\n  font-size: 65%;\n}\n\n#gqmtcsodvg .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#gqmtcsodvg .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#gqmtcsodvg .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#gqmtcsodvg .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#gqmtcsodvg .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#gqmtcsodvg .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#gqmtcsodvg .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#gqmtcsodvg .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#gqmtcsodvg div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <caption>Table 1: Packages in the data shaping articles</caption>\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"packages\">packages</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"used for\">used for</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"packages\" class=\"gt_row gt_left\">midfielddata</td>\n<td headers=\"used for\" class=\"gt_row gt_left\">student records practice data</td></tr>\n    <tr><td headers=\"packages\" class=\"gt_row gt_left gt_striped\">data.table</td>\n<td headers=\"used for\" class=\"gt_row gt_left gt_striped\">manipulating data</td></tr>\n    <tr><td headers=\"packages\" class=\"gt_row gt_left\">dplyr</td>\n<td headers=\"used for\" class=\"gt_row gt_left\">manipulating data</td></tr>\n    <tr><td headers=\"packages\" class=\"gt_row gt_left gt_striped\">tidyr</td>\n<td headers=\"used for\" class=\"gt_row gt_left gt_striped\">manipulating data</td></tr>\n    <tr><td headers=\"packages\" class=\"gt_row gt_left\">readr</td>\n<td headers=\"used for\" class=\"gt_row gt_left\">import data</td></tr>\n    <tr><td headers=\"packages\" class=\"gt_row gt_left gt_striped\">wrapr</td>\n<td headers=\"used for\" class=\"gt_row gt_left gt_striped\">tools for writing and debugging R code</td></tr>\n    <tr><td headers=\"packages\" class=\"gt_row gt_left\">cdata</td>\n<td headers=\"used for\" class=\"gt_row gt_left\">reshaping transforms</td></tr>\n    <tr><td headers=\"packages\" class=\"gt_row gt_left gt_striped\">ggplot2</td>\n<td headers=\"used for\" class=\"gt_row gt_left gt_striped\">creating charts</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n<br>\n\nWe load the packages used in an article as one of the first code chunks, as shown below. You can copy any code chunk by clicking on the \"Copy to clipboard\" icon ![](figures/clipboard-icon.png).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages used in this article\nlibrary(\"data.table\")\nlibrary(\"dplyr\", warn.conflicts = FALSE)\nlibrary(\"midfielddata\")\nlibrary(\"readr\")\nlibrary(\"wrapr\", warn.conflicts = FALSE)\n```\n:::\n\n\n\n\n\n\n## Data \n\n*Load* the datasets from midfielddata. View data dictionaries via `?student`, `?term`, and `?degree`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(student, term, degree)\n```\n:::\n\n\nHave a quick look at each one using dplyr `glimpse()`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(student)\n#> Rows: 97,555\n#> Columns: 13\n#> $ mcid           <chr> \"MCID3111142225\", \"MCID3111142283\", \"MCID3111142290\", \"…\n#> $ institution    <chr> \"Institution B\", \"Institution J\", \"Institution J\", \"Ins…\n#> $ transfer       <chr> \"First-Time Transfer\", \"First-Time Transfer\", \"First-Ti…\n#> $ hours_transfer <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n#> $ race           <chr> \"Asian\", \"Asian\", \"Asian\", \"Asian\", \"Asian\", \"Asian\", \"…\n#> $ sex            <chr> \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male…\n#> $ age_desc       <chr> \"Under 25\", \"Under 25\", \"Under 25\", \"Under 25\", \"Under …\n#> $ us_citizen     <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\",…\n#> $ home_zip       <chr> NA, \"22020\", \"23233\", \"20853\", \"22003\", \"23234\", \"24148…\n#> $ high_school    <chr> NA, NA, \"471872\", NA, \"470080\", \"471877\", NA, NA, NA, N…\n#> $ sat_math       <dbl> NA, 560, 510, 640, 600, 570, 480, NA, NA, NA, 520, 430,…\n#> $ sat_verbal     <dbl> NA, 230, 380, 460, 500, 530, 530, NA, NA, NA, 490, 490,…\n#> $ act_comp       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n\nglimpse(term)\n#> Rows: 639,915\n#> Columns: 13\n#> $ mcid                <chr> \"MCID3111142225\", \"MCID3111142283\", \"MCID311114228…\n#> $ institution         <chr> \"Institution B\", \"Institution J\", \"Institution J\",…\n#> $ term                <chr> \"19881\", \"19881\", \"19883\", \"19885\", \"19891\", \"1989…\n#> $ cip6                <chr> \"140901\", \"240102\", \"240102\", \"190601\", \"190601\", …\n#> $ level               <chr> \"01 First-year\", \"01 First-year\", \"01 First-year\",…\n#> $ standing            <chr> \"Good Standing\", \"Academic Probation\", \"Academic P…\n#> $ coop                <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"N…\n#> $ hours_term          <dbl> 7, 6, 12, 6, 6, 6, 6, 18, 15, 14, 13, 3, 13, 3, 3,…\n#> $ hours_term_attempt  <dbl> 7, 6, 12, 6, 6, 6, 6, 18, 18, 14, 13, 3, 13, 3, 3,…\n#> $ hours_cumul         <dbl> 7, 6, 18, 24, 30, 36, 42, 63, 78, 14, 27, 60, 82, …\n#> $ hours_cumul_attempt <dbl> 7, 6, 18, 24, 30, 36, 42, 63, 81, 14, 27, 60, 82, …\n#> $ gpa_term            <dbl> 2.56, 1.85, 1.93, 2.15, 1.85, 1.20, 1.85, 2.33, 2.…\n#> $ gpa_cumul           <dbl> 2.56, 1.85, 1.90, 1.96, 1.94, 1.82, 1.82, 1.98, 2.…\n\nglimpse(degree)\n#> Rows: 49,665\n#> Columns: 5\n#> $ mcid        <chr> \"MCID3111142225\", \"MCID3111142290\", \"MCID3111142294\", \"MCI…\n#> $ institution <chr> \"Institution B\", \"Institution J\", \"Institution J\", \"Instit…\n#> $ term_degree <chr> \"19881\", \"19921\", \"19903\", \"19921\", \"19913\", \"19883\", \"199…\n#> $ cip6        <chr> \"141001\", \"141001\", \"141001\", \"141001\", \"090401\", \"141901\"…\n#> $ degree      <chr> \"Bachelor of Science in Electrical Engineering\", \"Bachelor…\n```\n:::\n\n\n\n\n\n\n## Three systems\n\nWe format the data frames used in our examples three ways, once for each system: base R, data.table, and dplyr. The table shows the naming convention we use to distinguish the different forms. \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"adpkgkozxt\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#adpkgkozxt table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#adpkgkozxt thead, #adpkgkozxt tbody, #adpkgkozxt tfoot, #adpkgkozxt tr, #adpkgkozxt td, #adpkgkozxt th {\n  border-style: none;\n}\n\n#adpkgkozxt p {\n  margin: 0;\n  padding: 0;\n}\n\n#adpkgkozxt .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: small;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #000000;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#adpkgkozxt .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#adpkgkozxt .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#adpkgkozxt .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#adpkgkozxt .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#adpkgkozxt .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#adpkgkozxt .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#adpkgkozxt .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#adpkgkozxt .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#adpkgkozxt .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#adpkgkozxt .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#adpkgkozxt .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#adpkgkozxt .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#adpkgkozxt .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#adpkgkozxt .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: middle;\n}\n\n#adpkgkozxt .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#adpkgkozxt .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#adpkgkozxt .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: none;\n  border-top-width: 1px;\n  border-top-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D5D5D5;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D5D5D5;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#adpkgkozxt .gt_stub {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #5F5F5F;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#adpkgkozxt .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#adpkgkozxt .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#adpkgkozxt .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#adpkgkozxt .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#adpkgkozxt .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #5F5F5F;\n}\n\n#adpkgkozxt .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#adpkgkozxt .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#adpkgkozxt .gt_grand_summary_row {\n  color: #333333;\n  background-color: #D5D5D5;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#adpkgkozxt .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #5F5F5F;\n}\n\n#adpkgkozxt .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #5F5F5F;\n}\n\n#adpkgkozxt .gt_striped {\n  background-color: #F4F4F4;\n}\n\n#adpkgkozxt .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#adpkgkozxt .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#adpkgkozxt .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#adpkgkozxt .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#adpkgkozxt .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#adpkgkozxt .gt_left {\n  text-align: left;\n}\n\n#adpkgkozxt .gt_center {\n  text-align: center;\n}\n\n#adpkgkozxt .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#adpkgkozxt .gt_font_normal {\n  font-weight: normal;\n}\n\n#adpkgkozxt .gt_font_bold {\n  font-weight: bold;\n}\n\n#adpkgkozxt .gt_font_italic {\n  font-style: italic;\n}\n\n#adpkgkozxt .gt_super {\n  font-size: 65%;\n}\n\n#adpkgkozxt .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#adpkgkozxt .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#adpkgkozxt .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#adpkgkozxt .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#adpkgkozxt .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#adpkgkozxt .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#adpkgkozxt .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#adpkgkozxt .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#adpkgkozxt div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <caption>Table 2: Dataset naming convention</caption>\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"system\">system</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"suffix\">suffix</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"example\">example</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"class\">class</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"system\" class=\"gt_row gt_left\">base R</td>\n<td headers=\"suffix\" class=\"gt_row gt_left\">_df</td>\n<td headers=\"example\" class=\"gt_row gt_left\">student_df</td>\n<td headers=\"class\" class=\"gt_row gt_left\">data.frame</td></tr>\n    <tr><td headers=\"system\" class=\"gt_row gt_left gt_striped\">data.table</td>\n<td headers=\"suffix\" class=\"gt_row gt_left gt_striped\">_dt</td>\n<td headers=\"example\" class=\"gt_row gt_left gt_striped\">student_dt</td>\n<td headers=\"class\" class=\"gt_row gt_left gt_striped\">data.frame, data.table</td></tr>\n    <tr><td headers=\"system\" class=\"gt_row gt_left\">dplyr</td>\n<td headers=\"suffix\" class=\"gt_row gt_left\">_tbl</td>\n<td headers=\"example\" class=\"gt_row gt_left\">student_tbl</td>\n<td headers=\"class\" class=\"gt_row gt_left\">data.frame, tbl_df, tbl</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n<br>\n\nCode chunks that do the same task are grouped and color coded by system, as illustrated below. Here, we prepare three versions of the `student` table, one per system. \n\n\n::: {.cell class='base'}\n\n```{.r .cell-code}\n# base R\nstudent_df <- data.frame(student)\n```\n:::\n\n::: {.cell class='dtbl'}\n\n```{.r .cell-code}\n# data.table\nstudent_dt <- copy(student)\n```\n:::\n\n::: {.cell class='dplyr'}\n\n```{.r .cell-code}\n# dplyr\nstudent_tbl <- tibble(student)\n```\n:::\n\n\n<br>\n\nA group of code chunks is typically followed by a comment section. For example, commenting on the code chunks above: \n\n[Comments]{.important}\n\n- *base R.* `data.frame()` converts the dataset to class `data.frame`, removing attributes associated with the default `data.table` format. \n\n- *data.table.*  `copy()` creates a new memory address for the new object. In data.table, if we don't \"copy\", any subsequent operations on `student_dt` are applied \"by reference\" to the original `student` table. \n\n- *dplyr.* `tibble()` converts the dataset to class `tbl_df`, removing  attributes associated with the default `data.table` format. \n\n\n\n\n\n\n\n## Method\n\n1. We want to make each operation as transparent as possible for the R novice. Hence we generally write a line of code to do one thing, avoiding combined or nested operations and introducing intermediate or temporary variables that get overwritten before reaching a desired result, e.g., `DF` for an intermediate data.frame, `DT` for an intermediate data.table, `vec` for an intermediate vector, etc.  \n\n2. In the same vein, we sometimes use intermediate variables for indexing, e.g. `rows_we_want`, `columns_we_want`, `order_index`, etc. \n\n3. In general, we show only one approach per task per system, offering what we think is the best choice for our audience. In R there are usually multiple approaches for the same task and resources for exploring other methods are readily available. \n\n4. We follow the convention of chaining dplyr steps with the magrittr pipe `%>%` (though assigning temporary variables would work just as well). We do not generally use the piping or chaining operations available in base R and data.table.  \n\n5. In each example, results are manipulated such that base R, data.table, and dplyr yield the same form (usually a data frame) with the same variables and observations. In most cases, we compare data frame equivalence with  `wrapr::check_equiv_frames()` which converts its arguments to data.frame class and reorders columns and rows. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_equiv_frames(student_df, student_dt)\n#> [1] TRUE\ncheck_equiv_frames(student_dt, student_tbl)\n#> [1] TRUE\n```\n:::\n\n\n6. In cases where re-ordering rows or columns is part of the task, we compare results by using base R `all.equal()` instead of `check_equiv_frames()`. By setting the `check.attributes` argument to FALSE, data frame attributes (other than column names) are ignored, for example, row.names (if any) and class (e.g., `tbl` or `data.table`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall.equal(student_df, student_dt, check.attributes = FALSE)\n#> [1] TRUE\nall.equal(student_dt, student_tbl, check.attributes = FALSE)\n#> [1] TRUE\n```\n:::\n\n\n\n\n\n\n\n\n\n## Download and write CSV files\n\nIn addition to the datasets from the midfielddata package, we have some prepared data to download from the Institute repository (an Internet connection is required). \n\n*Download and write* a CSV file to your RStudio project data directory. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# run me first\ndata_url <- \"https://raw.githubusercontent.com/MIDFIELDR/2024-midfield-institute/main/data/case_blocs.csv\"\n```\n:::\n\n\nOne of these code chunks can be copied and run in your Console window as these lines only have to be run once. We write the data file to the data directory of your R project with file paths *relative* to the R project main directory. \n\n\n::: {.cell class='base'}\n\n```{.r .cell-code}\n# base R\ncase_blocs <- read.csv(data_url)\nwrite.csv(case_blocs, file = \"data/case_blocs.csv\", row.names = FALSE)\n```\n:::\n\n::: {.cell class='dtbl'}\n\n```{.r .cell-code}\n# data.table\ncase_blocs <- fread(data_url)\nfwrite(case_blocs, file = \"data/case_blocs.csv\")\n```\n:::\n\n::: {.cell class='dplyr'}\n\n```{.r .cell-code}\n# readr\ncase_blocs <- read_csv(data_url, show_col_types = FALSE)\nwrite_csv(case_blocs, file = \"data/case_blocs.csv\")\n```\n:::\n\n\n[Comments]{.important}\n\n- *base R.* `write.csv()` set `row.names` to FALSE for consistency with other two systems. All three systems expect the same first two arguments, the data frame and the file path.  \n\n- *data.table.* `fwrite()` Similar to `write.csv()` but faster. Default `row.names` is FALSE. \n\n- *dplyr.* `write_csv()` also faster than `write.csv()`. Default `row.names` is FALSE.\n\n\n\n\n## Read CSV files\n\n*Import* the file you just saved. \n\n\n::: {.cell class='base'}\n\n```{.r .cell-code}\n# base R\ncase_blocs_df <- read.csv(\"data/case_blocs.csv\")\n```\n:::\n\n::: {.cell class='dtbl'}\n\n```{.r .cell-code}\n# data.table\ncase_blocs_dt <- fread(\"data/case_blocs.csv\")\n```\n:::\n\n::: {.cell class='dplyr'}\n\n```{.r .cell-code}\n# readr\ncase_blocs_tbl <- read_csv(\"data/case_blocs.csv\", show_col_types = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncase_blocs_dt\n#>                  mcid    program peer_group\n#>                <char>     <char>     <char>\n#>     1: MCID3111142965 Electrical   starters\n#>     2: MCID3111145102 Electrical   starters\n#>     3: MCID3111150194 Industrial   starters\n#>     4: MCID3111156083 Electrical   starters\n#>     5: MCID3111156325 Electrical   starters\n#>    ---                                     \n#> 12966: MCID3112618553 Mechanical  graduates\n#> 12967: MCID3112618574 Mechanical  graduates\n#> 12968: MCID3112618976 Mechanical  graduates\n#> 12969: MCID3112619484 Electrical  graduates\n#> 12970: MCID3112641535 Mechanical  graduates\n\ncheck_equiv_frames(case_blocs_df, case_blocs_dt)\n#> [1] TRUE\ncheck_equiv_frames(case_blocs_dt, case_blocs_tbl)\n#> [1] TRUE\n```\n:::\n\n\n[Comments]{.important}\n\n- `read.csv()`, `fread()`, and `read_csv()` have a large number of arguments for controlling the input. Some of the most commonly encountered are  `colClasses` (base R and data.table) or `col_types` (dplyr) to specify the class of a column; `skip` a number of lines before reading data; and `header` (base R and data.table) or `col_names` (dplyr) to use the first row of input as column names. \n\n- `read.csv()`, `fread()`, and `read_csv()` were also used earlier with a URL as the argument to download the supplemental data. \n\n\n\n\n\n\n## References \n\n<div id=\"refs\"></div>\n\n\n\n\n\n## Appendix\n\nThe R and package version numbers (as of the most recent update) are: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nR.version$version.string\n#> [1] \"R version 4.4.1 (2024-06-14 ucrt)\"\npackageVersion(\"midfielddata\")\n#> [1] '0.2.1'\npackageVersion(\"data.table\")\n#> [1] '1.16.0'\npackageVersion(\"dplyr\")\n#> [1] '1.1.4'\npackageVersion(\"tidyr\")\n#> [1] '1.3.1'\npackageVersion(\"readr\")\n#> [1] '2.1.5'\npackageVersion(\"wrapr\")\n#> [1] '2.1.0'\npackageVersion(\"cdata\")\n#> [1] '1.2.1'\npackageVersion(\"ggplot2\")\n#> [1] '3.5.1'\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}