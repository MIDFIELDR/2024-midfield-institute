---
title: "Before you arrive"
---

![Image: *Data Visualization and R Bookshelf* by Richard Layton.](figures/before-you-arrive.png)

To get the most out of the workshop, you should have the essential software installed and running on your computer several days before the workshop to give you time to contact us with questions if anything goes amiss.

If you are trying R for the first time, it is vital that you attempt to set up your computer with the necessary software in advance or it will be difficult to keep up. 

As you work your way through this pre-workshop assignment, you will encounter R code chunks to type. Clicking the *Copy to Clipboard* icon ![](figures/clipboard-copy-icon.png) in the top right corner of the code chunk copies the code to your clipboard, saving some typing time. For example:

```{r}
#| results: hide
# sample code chunk
x <- 10 
```


## Already use R?

If you are already an R and RStudio integrated development environment (IDE) user, this is a great time to check for updates. 

**Updating RStudio**

- RStudio menu *Help \> Check for Updates* will tell you if you are current or not. 
- To update, close RStudio on your machine, download the new version from [Posit)](https://posit.co/downloads/). 

**Update your packages**

[How to upgrade all out-of-date packages](https://rstats.wtf/maintaining-r.html#how-to-upgrade-all-out-of-date-packages) in *What They Forgot to Teach You About R* by Jennifer Bryan and Jim Hester. 


**Updating R**

The easiest way to update R is to simply [download the newest version](https://cloud.r-project.org/). RStudio will automatically use the latest you've installed. 


Alternatively, Windows users can use the installr package:

- Install the installr package 
- If open, close R and RStudio 
- Navigate to your most recent `Rgui.exe` file located in your Programs directory, e.g., `C:\Program Files\R\R-4.0.0\bin\x64\Rgui.exe`  
- Right-click on `Rgui.exe` and run as administrator
- In the R GUI window that appears, run the commands

``` r
    # Windows users only
    library("installr")
    updateR()
```

**Updating your R library**

[How to transfer your library when updating R](https://rstats.wtf/maintaining-r.html#how-to-transfer-your-library-when-updating-r) also by Bryan and Hester. Requires the fs package.  


## New to R? 

This section is for anyone who has not yet installed R or RStudio. 

The first steps are to install R and RStudio. Both R and RStudio are free. Windows users may have to login as an Administrator before installing the software. 

- [Install R and RStudio](https://posit.co/download/rstudio-desktop/#download) from the "Posit" website. Alternatively, you can download R directly from the [R website](https://cloud.r-project.org).


Once the installation is complete, you can take a 2-minute tour of the RStudio interface.

- [Let's start (00:57--02:32)](https://www.youtube.com/watch?v=kfcX5DEMAp4?start=57&end=152) by R Ladies Sydney [@RLadiesSydney:2018:Lesson1]   

The same video includes a longer (7 minute) tour of the four quadrants (panes) in RStudio if you are interested. 

- [The RStudio quadrants (07:21--14:40)](https://www.youtube.com/embed/kfcX5DEMAp4?start=441&end=880) by R Ladies Sydney [@RLadiesSydney:2018:Lesson1] 


## Start the setup

Once you have R and RStudio up and running on your system, we have a short set of setup instructions to help prepare you for the workshop R tutorials. 

We start by creating an RStudio *Project* file and directory. You can recognize an R project file by its *.Rproj* suffix. 

If you prefer your instructions with commentary, 

- [Start with a Project (02:34--04:50)](https://www.youtube.com/embed/kfcX5DEMAp4?start=154&end=290){target="_blank"} by R Ladies Sydney [@RLadiesSydney:2018:Lesson1] 


If you prefer basic written instructions, 

- RStudio, *File &gt; New Project... &gt; New Directory &gt; New Project* 
- Or, click the *New Project* button in the Console ribbon, 

![](figures/rstudio-new-project.png){fig-alt="rstudio new project button"}

In the dialog box that appears, 
  
- Type the workshop name as the directory name, for example, `midfield-institute-2024`    
- Use the browse button to select a location on your computer to create the project  folder  
- Click the *Create Project* button  
 
Whenever you work with the workshop materials, launch the `midfield-institute-2024.Rproj` file to start the session. 

## Add some folders 

While file organization is a matter of personal preference, we ask that you use the directory structure shown here for your work in the workshop. Assuming we called our project `midfield-institute-2024`, the minimal directory structure has three folders in it plus the `.Rproj` file at the top level. 


    midfield-institute-2024\
        data\
        results\
        scripts\
        midfield-institute-2024.Rproj


We use the folders as follows: 

- `data` data files 
- `results` finished graphs and tabulated data formatted for display  
- `scripts` R scripts that operate on data to produce results  

To create folders: 

- use your usual method of creating new folders on your machine 
- or you can use the *New Folder* button in the Files pane 

![](figures/rstudio-new-folder.png){fig-alt="rstudio new folder"}


For a video guide, 

- [Make some folders  (04:50--06:08)](https://www.youtube.com/embed/kfcX5DEMAp4?start=290&end=368){target="_blank"} by R Ladies Sydney [@RLadiesSydney:2018:Lesson1] 

## Install CRAN packages

The fundamental unit of shareable code in R is the *package.* For the R novice, an R package is like an "app" for R---a collection of functions, data, and documentation for doing work in R that is easily shared with others  [@wickham2014advanced]. 

Most packages are obtained from the [CRAN](https://cran.r-project.org/){target="_blank"} website [@cranweb]. To install a CRAN package using RStudio:

- Launch RStudio 

The RStudio interface has several panes. We want the *Files/Plots/Packages* pane. 

- Select the *Packages*  tab  

![](figures/rstudio-packages.png){fig-alt="rstudio packages pane"}


Next, 

- Click *Install* on the ribbon 
- In the dialog box, type the name of the package. For our first package, type  `data.table` to install the data.table package [@R-data.table]
- Check the *Install dependencies* box 
- Click the  *Install* button 



> During the installation, Windows users might get a warning message about 
> Rtools, something like:
>    
> `WARNING: Rtools is required to build R packages but is not currently` 
> `installed. Please download etc.` 


Rtools is needed for packages with C/C++/FORTRAN code from source---which does not apply to us. You may ignore the warning and carry on. 

In the RStudio Console, you should see a message like this one,  

``` r
package 'data.table' successfully unpacked and MD5 sums checked
```

If successful, the package will appear in the Packages pane, e.g., 

![](figures/rstudio-packages-3.png){fig-alt="rstudio packages pane"}

Repeat the process for the following packages: 

    checkmate
    ggplot2
    wrapr
    curl

Alternatively, you can install them all at once by typing in the Console: 

``` r
packages_we_use <- c("data.table", "ggplot2", "checkmate", "wrapr", "curl")
install.packages(packages_we_use)
```





## Install midfieldr


Install with:

```r
# type in the RStudio Console 
install.packages("midfieldr")
```

:::{.callout-tip appearance="default"}

If you get an error message like the one below, it means that the packages in the dependencies list have not been installed. 

![](figures/error.png)

The remedy is to install any packages listed in the error message and then install midfieldr again. 
:::

Once midfieldr is successfully installed, you can confirm the installation by running the following lines to bring up the package help page in the Help window. 

``` r
# type in the RStudio Console 
library("midfieldr")
?midfieldr
```

If the installation is successful, the code chunk above should produce a view of the help page as shown here. 

![](figures/README-midfieldr-help-page-2.png){fig-alt="midfiedr help page pane"}


## Install midfielddata

Because of its size, the data package is stored in a `drat` repository instead of CRAN. Installation takes time; please be patient and wait for the Console prompt ">" to reappear. 

Type (or copy and paste) the following lines in the RStudio Console. 

```r
# type in the RStudio Console  
install.packages("midfielddata", 
                 repos = "https://MIDFIELDR.github.io/drat/", 
                 type = "source")
# be patient
```

Once the Console prompt ">" reappears, you can confirm a successful installation by viewing the package help page. In the Console, run:

```r
# type in the RStudio Console  
library("midfielddata")
?midfielddata
```

If the installation is successful, the code chunk above should produce a view of the help page as shown here.  

![](figures/README-midfielddata-help-page-2.png){fig-alt="midfiedldata help page pane"}



## Finish the setup

As a final task, save your open files and close RStudio. 

If you get a prompt about saving your workspace image, the answer is No.  

You can turn this prompt off by reopening RStudio and use the pulldown menu: 

- _Tools &gt; Global Options..._
- In the dialog box, _Save workspace to .RData on exit:_  Select "Never"






## Homework


If you are new to R (or new to the ggplot2 or data.table packages), we recommend you complete the three [pre-workshop tutorials](agenda.html) for an introduction to R including manipulating data and creating charts. 

Completing these tutorials before attending the Institute will make your time with us that much more productive. 

